<Dialog open={isModalOpen} onOpenChange={setIsModalOpen}>
        <DialogContent
          className={`${
            isEditMode ? "sm:max-w-[900px]" : "sm:max-w-[700px]"
          } max-h-[90vh] overflow-hidden p-0`}
        >
          <DialogHeader className="px-6 pt-6">
            <DialogTitle>
              {!isEditMode ? project.title : "Edit Project"}
            </DialogTitle>
          </DialogHeader>

          <ScrollArea className="max-h-[calc(90vh-9rem)]">
            <div className="px-6">
              {!isEditMode ? (
                /* View Mode */
                <div className="space-y-4 py-4">
                  <DialogDescription className="text-gray-700 whitespace-pre-line">
                    {project.description}
                  </DialogDescription>
                  <div className="flex flex-wrap gap-4 pt-4">
                    {project.liveLink && (
                      <Button variant="outline" size="sm" asChild>
                        <a
                          href={project.liveLink}
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          <ExternalLink className="h-4 w-4 mr-2" />
                          View Live Project
                        </a>
                      </Button>
                    )}
                    {project.repoLink && (
                      <Button variant="outline" size="sm" asChild>
                        <a
                          href={project.repoLink}
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          <Github className="h-4 w-4 mr-2" />
                          View Repository
                        </a>
                      </Button>
                    )}
                  </div>
                </div>
              ) : (
                /* Edit Mode */
                <Form {...form}>
                  <form
                    onSubmit={form.handleSubmit(handleSubmit)}
                    className="space-y-4 py-4"
                  >
                    <FormField
                      control={form.control}
                      name="title"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Project Title</FormLabel>
                          <FormControl>
                            <Input {...field} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <FormField
                      control={form.control}
                      name="description"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Description</FormLabel>
                          <FormControl>
                            <Textarea
                              {...field}
                              rows={5}
                              placeholder="Provide a detailed description of your project..."
                            />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                    <div className="grid grid-cols-2 gap-4">
                      <FormField
                        control={form.control}
                        name="liveLink"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Live Link</FormLabel>
                            <FormControl>
                              <Input {...field} placeholder="https://..." />
                            </FormControl>
                            <FormDescription>
                              URL to the live project (optional)
                            </FormDescription>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      <FormField
                        control={form.control}
                        name="repoLink"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Repository Link</FormLabel>
                            <FormControl>
                              <Input
                                {...field}
                                placeholder="https://github.com/..."
                              />
                            </FormControl>
                            <FormDescription>
                              URL to the code repository (optional)
                            </FormDescription>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>

                    {/* Tips section below the form */}
                    <div className="mt-6 space-y-4">
                      <FormSuggestions />
                    </div>
                  </form>
                </Form>
              )}
            </div>
          </ScrollArea>

          <DialogFooter className="px-6 py-4 border-t mb-3">
            {!isEditMode ? (
              <>
                <Button variant="outline" onClick={() => setIsModalOpen(false)}>
                  Close
                </Button>
                <Button onClick={handleEnterEditMode}>
                  <Edit className="h-4 w-4 mr-2" />
                  Edit Project
                </Button>
              </>
            ) : (
              <>
                <Button
                  type="button"
                  variant="outline"
                  onClick={() => setIsEditMode(false)}
                >
                  Cancel
                </Button>
                <Button
                  type="button"
                  variant="outline"
                  onClick={handleCheckStrength}
                  className="relative"
                >
                  {projectStengthPending ? (
                    <RefreshCw className="h-4 w-4 mr-2 animate-spin" />
                  ) : (
                    <RefreshCw className="h-4 w-4 mr-2" />
                  )}
                  Check Strength
                </Button>
                <Button onClick={form.handleSubmit(handleSubmit)}>
                  <Save className="h-4 w-4 mr-2" />
                  Save Changes
                </Button>
              </>
            )}
          </DialogFooter>
        </DialogContent>
      </Dialog>
